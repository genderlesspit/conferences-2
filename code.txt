	on_daily = {
		every_country = { #add every country not in array with value x to array
			limit = {
				has_opinion = { target = ROOT value > 20 }
 				NOT = { 
					is_in_array = { 
						value = THIS.id 
						array = ROOT.db_diplomacy_friendly
					} 
				}
			}
			add_to_array = { 
				array = ROOT.db_diplomacy_friendly
					value = THIS.id
			}
		}
	}
	
	on_daily = {
		for_each_scope_loop = {
			array = ROOT.db_diplomacy_friendly
			if = {
				limit = { NOT = { has_opinion_modifier = db_established_relations } }
				country_event = db_diplomacy.1
				add_opinion_modifier = {
					target = ROOT
					modifier = db_established_relations
				}
			}
		}	
	}
	
#		every_country = { 
#		limit = { 
#			has_opinion = { 
#				target = ROOT 
#				value > 20 
#			} 
#
#			add_to_array = { ROOT.db_diplomacy_friendly = PREV } 
#			}
#	}
	
	
	
##unfinished ideas
#	on_weekly = {
#		effect = {
#			any_country = {
#				limit = { 
#					has_opinion	= {
#						target = ROOT
#					}
#					NOT = { has_opinion_modifier = db_established_relations } 
#				}
#				save_event_target_as = db_diplomacy_establish_relations_FROM
#			}
#			event_target:db_diplomacy_establish_relations_FROM = { 
#				country_event = { 
#					id = db_diplomacy.1 
#					#days = 5
#					#random_hours = 12
##					#random_days = 5 
#				}
#				add_opinion_modifier = {
#					target = ROOT
#					modifier = db_established_relations
#				}
#			} 
#		}
#	}

#every_country = { limit = { has_opinion = { target = ROOT value < 20 } is_in_array = { value = PREV array = ROOT.db_diplomacy_friendly } } remove_from_array = { array = ROOT.db_diplomacy_friendly value = PREV } }
#every_country = { limit = { is_in_array = { value = PREV array = ROOT.db_diplomacy_friendly } } country_event = db_diplomacy.1 }

on_startup = {
	effect = {
		every_state = {
			limit = {
				is_controlled_by = ROOT
			}
			add_to_array = {
				array = ROOT.controlled_state_ids
				value = THIS.id
			}
		}
	}
}

on_weekly = {
	effect = {
		every_state = {
			limit = {
				is_controlled_by = ROOT
			}
		add_to_array = {
			array = ROOT.controlled_state_ids
			value = THIS.id
		}
	}
	if = {
		limit = {
			any_state = {
				limit = { NOT = { is_controlled_by = ROOT } }
				is_in_array = {
					array = ROOT.controlled_state_ids
					value = THIS.id
				}
				remove_from_array = {
					array = ROOT.controlled_state_ids
					value = THIS.id
				}
			}
		}
	}
}

on_startup = {
	effect = {
		set_variable = {
			var = total_state_conservative
			value = 0
		}
		set_variable = {
			var = total_state_liberal
			value = 0
		}
		set_variable = {
			var = total_state_neutrality
			value = 0
		}
		set_variable = {
			var = total_state_communism
			value = 0
		}
		set_variable = {
			var = total_state_fascism
			value = 0
		}
		for_each_scope_loop = {
			array = ROOT.controlled_state_ids
			set_temp_variable = {
				var = governor_chance_democratic
				value = party_popularity_100@democratic	
			}
			set_temp_variable = {
				var = governor_chance_neutrality
				value = party_popularity_100@neutrality
			}
			set_temp_variable = {
				var = governor_chance_communism
				value = party_popularity_100@communism
			}
			set_temp_variable = {
				var = governor_chance_fascism
				value = party_popularity_100@fascism
			}
			random_list = {
				var:governor_chance_democratic = {
					random_list = {
						10 = {
							db_effect_state_set_conservative = yes
							modifier = { factor = 2 has_country_leader_ideology = conservatism }
							generate_character = {
								token_base = PREV.governor # token will be TAG_token_base
								advisor = {
									slot = political_advisor
									traits = { liberal_governor }
									available = {
										PREV = { has_state_flag = db_state_conservative }
										ROOT = { controls_state = PREV }	
									}
								}		
								portraits = { 
									army = { small = GFX_idea_generic_fascist_demagogue }
								}
							}
						}
						10 = {
							db_effect_state_set_liberal = yes
							modifier = { factor = 2 has_country_leader_ideology = liberalism }
							generate_character = {
								token_base = PREV.governor # token will be TAG_token_base
								advisor = {
									slot = political_advisor
									traits = { liberal_governor }
									available = {
										PREV = { has_state_flag = state_1_neutral }
										ROOT = { controls_state =  PREV }	
									}
								}		
								portraits = { 
									army = { small = GFX_idea_generic_fascist_demagogue }
								}
							}
						}
					}
				}
				var:governor_chance_neutrality = {
					db_effect_state_set_neutral = yes
					generate_character = {
						token_base = PREV.governor # token will be TAG_token_base
						advisor = {
							slot = political_advisor
								traits = { neutral_governor }
								available = {
									PREV = { has_state_flag = db_state_neutrality }
									ROOT = { controls_state =  PREV }
								}
							}		
						portraits = { 
							army = { small = GFX_idea_generic_fascist_demagogue }
						}
					}
				}	
				var:governor_chance_communism = {
					db_effect_state_set_communism = yes
					generate_character = {
						token_base = PREV.governor # token will be TAG_token_base
						advisor = {
							slot = political_advisor
								traits = { communist_governor }
								available = {
									PREV = { has_state_flag = db_state_communist }
									ROOT = { controls_state =  PREV }
								}
							}		
						portraits = { 
							army = { small = GFX_idea_generic_fascist_demagogue }
						}
					}
				}
				var:governor_chance_fascism = {
					db_effect_state_set_neutral = yes
					generate_character = {
						token_base = PREV.governor # token will be TAG_token_base
						advisor = {
							slot = political_advisor
								traits = { fascist_governor }
								available = {
									PREV = { has_state_flag = db_state_fascist }
									ROOT = { controls_state =  PREV }
								}
							}		
						portraits = { 
							army = { small = GFX_idea_generic_fascist_demagogue }
						}
					}
				}
			}
		}
	}
}

on_weekly = {
	effect = {
		every_state = {
			limit = {
				is_in_array = ROOT.controlled_state_ids
			}
			if = { 
				limit = { 
				PREV = { has_state_flag = db_state_liberal } 
					NOT = { 
						has_dynamic_modifier = {
							modifier = my_dynamic_modifier
							scope = GER
						}
					}
				}
			}
		}
		
	}
db_state_modifier_conservative = {}
db_state_modifier_liberal = {}
db_state_modifier_fascist = {}
db_state_modifier_neutral = {}
db_state_modifier_communist = {}

}

ROOT = {
	set_variable = {
		var = total_state_conservative
		value = 0
	}
	set_variable = {
		var = total_state_liberal
		value = 0
	}
	set_variable = {
		var = total_state_neutral
		value = 0
	}
	set_variable = {
		var = total_state_communist
		value = 0
	}
	set_variable = {
		var = total_state_fascist
		value = 0
	}	
	every_state = {
		set_event_target = db_election_state
		add_to_variable = {
			var = THIS.election_chance
			value = 0
		}
		add_to_variable = {
			var = THIS.election_chance
			value = stability
		}
		add_to_variable = {
			var = THIS.election_chance
			value = has_war_support
		}
		add_to_variable = {
			var = THIS.election_chance
			value = party_popularity@ruling_party
		}
		add_to_variable = {
			var = THIS.election_chance
			value = political_power_daily
		}
		if = {
			limit = { THIS = { is_core_of = ROOT } }
			divide_variable = {
				var = THIS.election_chance
				value = 5
			}
			clamp_variable = {
				var = THIS.election_chance
				min = 0
				max = 1
			}
			add_to_variable = {
				var = THIS.election_chance_lose
				value = 1
			}
			subtract_from_variable = {
				var = THIS.election_chance_lose
				value = THIS.election_chance
			}
		}
		if = {
			limit = { THIS = { NOT = { is_core_of = ROOT } } }
			add_to_variable = {
				var = THIS.election_chance
				value = resistance
			}
				add_to_variable = {
				var = THIS.election_chance
				value = compliance
			}
				divide_variable = {
				var = THIS.election_chance
				value = 7
			}
			clamp_variable = {
				var = THIS.election_chance
				min = 0
				max = 1
			}
			add_to_variable = {
				var = THIS.election_chance_lose
				value = 1
			}
			subtract_from_variable = {
				var = THIS.election_chance_lose
				value = THIS.election_chance
			}
		}
		random_list = {
			var:THIS.election_chance = {
				random_list = {
					10 = {
						set_state_flag = db_state_conservative
						PREV = {
							add_to_variable = {
								var = total_state_conservative
								value = 1
								tooltip = add_total_state_conservative
							}
						}
						add_dynamic_modifier = {
							modifier = db_state_modifier_conservative
							scope = THIS
							
						}
						modifier = { factor = 2 PREV = { has_country_leader_ideology = conservatism } } #placeholder for now
					}
					10 = {
						set_state_flag = db_state_liberal
						PREV = { 
							add_to_variable = {
								var = total_state_liberal
								value = 1
								tooltip = add_total_state_liberal
							}
						}
						add_dynamic_modifier = {
							modifier = db_state_modifier_liberal
							scope = THIS
							
						}
						modifier = { factor = 2 PREV = { has_country_leader_ideology = liberalism } }
					}
				}
			}
			var:THIS.election_chance_lose = {
				set_temp_variable = {
					var = governor_chance_neutrality
					value = party_popularity_100@neutrality
				}
				set_temp_variable = {
					var = governor_chance_communism
					value = party_popularity_100@communism
				}
				set_temp_variable = {
					var = governor_chance_fascism
					value = party_popularity_100@fascism
				}
				var:governor_chance_neutrality = {
					set_state_flag = db_state_neutral
					PREV = { 
						add_to_variable = {
							var = total_state_neutral
							value = 1
							tooltip = add_total_state_neutral
						}
					}
					add_dynamic_modifier = {
						modifier = db_state_modifier_neutral
						scope = THIS
						
					}
				}	
				var:governor_chance_communism = {
					set_state_flag = db_state_communist
					PREV = {
						add_to_variable = {
							var = total_state_communist
							value = 1
							tooltip = add_total_state_communist
						}
					}
					add_dynamic_modifier = {
						modifier = db_state_modifier_communist
						scope = THIS
						
					}
				}
				var:governor_chance_fascism = {
					set_state_flag = db_state_fascist
					PREV = {
						add_to_variable = {
							var = total_state_fascist
							value = 1
							tooltip = add_total_state_fascist
						}
					}
					add_dynamic_modifier = {
						modifier = db_state_modifier_fascist
						scope = THIS
						
					}
				}
			}
		}
	}
}


on_startup = {
    effect = {
        if = {
            limit = {
                has_state_category = city
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 6
            }
        }
        if = {
            limit = {
                has_state_category = large_city
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 7
            }
        }
        if = {
            limit = {
                has_state_category = megalopolis
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 8
            }
        }
        if = {
            limit = {
                has_state_category = metropolis
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 9
            }
        }
        if = {
            limit = {
                has_state_category = enclave
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 6
            }
        }
        if = {
            limit = {
                has_state_category = large_town
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 5
            }
        }
        if = {
            limit = {
                has_state_category = pastoral
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 3
            }
        }
        if = {
            limit = {
                OR = {
                    has_state_category = rural
                    has_state_category = small_island
                    has_state_category = tiny_island
                    has_state_category = town
                }
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 4
            }
        }
        if = {
            limit = {
                has_state_category = wasteland
            }
            set_variable = {
                var = THIS.db_state_base_wealth
                value = 1
            }
        }
		set_variable = {
			var = THIS.db_state_base_jobs
			value = THIS.db_state_base_wealth
		}
		clamp_variable = {
			var = THIS.db_state_base_jobs
			min = 4
			max = 7
		}
	}
}
		
on_daily = {
	effect = {
		every_country = { #set base employment number
			every_state = {
				set_variable = { #set employment level
					var = THIS.db_state_base_jobs_percent
					value = THIS.db_state_base_jobs
				}
				divide_variable = {
					var = THIS.db_state_base_jobs_percent
					value = 10
				}
				set_variable = {
					var = THIS.db_state_base_total_employed
					value = THIS.state_population_k
				}
				multiply_variable = {
					var = THIS.db_state_base_total_employed
					value = THIS.db_state_base_employment_percent
				}
			}
		}
		every_country = { #calculate total jobs base + military
			add_to_variable = {
				var = THIS.db_deployed_manpower_ratio
				value = THIS.deployed_army_manpower_k
			}
			add_to_variable = {
				var = THIS.db_deployed_manpower_ratio
				value = THIS.deployed_navy_manpower_k
			}
			add_to_variable = {
				var = THIS.db_deployed_manpower_ratio
				value = THIS.deployed_airforce_manpower_k
			}
			divide_variable = {
				var = THIS.db_deployed_manpower_ratio
				value = THIS.max_available_manpower_k
			}
			set_variable = { #reserved manpower ratio
				var = THIS.db_reserved_manpower_ratio
				value = 1
			}
			subtract_from_variable = {
				var = THIS.db_reserved_manpower_ratio
				value = THIS.db_deployed_manpower 
			}
			every_state = {
				set_variable = {
					var = THIS.db_state_military_jobs
					value = THIS.state_population_k
				}
				multiply_variable = {
					var = THIS.db_state_military_jobs
					value = PREV.current_conscription_amount	
				}
				multiply_variable = { #total state military jobs
					var = THIS.db_state_military_jobs
					value = PREV.db_deployed_manpower_ratio
				}
				set_variable = { #calculate total employed base + military
					var = THIS.db_state_total_employed
					value = THIS.db_state_base_total_employed
				}
				add_to_variable = {
					var = THIS.db_state_total_employed
					value = THIS.db_state_military_jobs
				}
			}
		}
		every_country = {
			every_state = { #calculate industrial employment modifier
				add_to_variable = {
					var = THIS.db_state_employment_modifier
					value = THIS.non_damaged_building_level@arms_factory	
				}
				add_to_variable = {
					var = THIS.db_state_employment_modifier
					value = THIS.non_damaged_building_level@industrial_complex
				}
				add_to_variable = {
					var = THIS.db_state_employment_modifier
					value = THIS.non_damaged_building_level@dockyard
				}
				divide_variable = { #should read between 1 and 0
					var = THIS.db_state_employment_modifier
					value = THIS.modifier@local_building_slots
				}
				multiply_variable = {
					var = THIS.db_state_employment_modifier
					value = THIS.industrial_capacity_factory
				}
				multiply_variable = {
					var = THIS.db_state_employment_modifier
					value = THIS.db_national_employment_modifier
				}
				clamp_variable = { #between no and double employment
					var = THIS.db_state_employment_modifier
					min = 0
					max = 1
				}
				############### CALCULATE EMPLOYMENT # based on modifier
				###############
				set_variable = {
					var = THIS.db_state_total_unemployed
					value = THIS.state_population_k
				}
				subtract_from_variable = {
					var = THIS.db_state_total_unemployed
					value = THIS.db_state_total_employed
				}
				set_variable = {
					var = THIS.db_state_total_added_jobs
					value = THIS.db_state_total_unemployed
				}
				multiply_variable = {
					var = THIS.db_state_total_added_jobs
					value = THIS.db_state_employment_modifier
				}
				add_to_variable = {
					var = THIS.db_state_total_employed
					value = THIS.db_state_total_added_jobs
				}
				clamp_variable = {
					var = THIS.db_state_total_employed
					max = THIS.state_population_k
				}
			}
		}
	}
}

on_daily = {
	
}
on_daily = 
add_to_variable = {
	var = THIS.db_state_total_jobs
	value = THIS.arms_factory_level	
}



set_variable = {
	var = THIS.db_state_military_jobs
	value = THIS.local_manpower	
}


set_state_flag = {
	

}

on_daily = {
	every_country = {

	}
}
	

on_daily = { ###INFANTRY PRODUCTION COST MODIFIER
	effect = {
		every_country = { #production cost modifier
			set_variable = { #Price of a M1 Garand
				var = db_spending_cost_modifier
				value = 83
			}
			if = {
				limit = {
					has_idea = undisturbed_isolation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 2
				}
			}
			if = {
				limit = {
					has_idea = isolation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 1.5
				}
			}
			if = {
				limit = {
					has_idea = civilian_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 1
				}
			}
			if = {
				limit = {
					has_idea = civilian_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 1
				}
			}
			if = {
				limit = {
					OR = {
						has_idea = low_economic_mobilisation
						has_idea = new_economic_policy
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 0.85
				}
			}
			if = {
				limit = {
					OR = { 
						has_idea = partial_economic_mobilisation
						has_idea = new_economic_policy_2
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 0.7
				}
			}
			if = {
				limit = {
					has_idea = low_economic_mobilisation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 0.55
				}
			}
			if = {
				limit = {
					has_idea = war_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 0.4
				}
			}
			if = {
				limit = {
					OR = { 
						has_idea = tot_economic_mobilisation
						has_idea = SPR_collectivized_society
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_modifier
					value = 0.3
				}
			} 
		}
		every_country = {
			set_variable = {
				var = THIS.db_spending_infantry_produced_today
				var = THIS.total_equipment_produced_infantry
			}
			subtract_from_variable = {
				var = THIS.db_spending_infantry_produced_today
				value = THIS.db_spending_infantry_produced_yesterday
			}
			set_variable = {
				var = THIS.db_spending_infantry_produced_today
				value = THIS.db_spending_infantry_produced_yesterday
			}
			set_variable = {
				var = THIS.db_spending_infantry_today
				value = THIS.db_spending_infantry_produced_yesterday
			}
			multiply_variable = { #multiply infantry cost by units produced
				var = THIS.db_spending_infantry_today
				value = THIS.db_spending_cost_modifier
			}
			add_to_variable = {
				var = THIS.db_spending_infantry_today
				value = THIS.db_spending_infantry_total
			}
		}
	}
}



##GENERIC INFANTRY

#############
##ARTILLERY##
#############
on_daily = { ###ARTILLERY COST
	effect = { 
		every_country = { #production cost modifier
			set_variable = {
				var = db_spending_cost_artillery
				value = 6560
			}
			if = {
				limit = {
					has_idea = undisturbed_isolation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 2
				}
			}
			if = {
				limit = {
					has_idea = isolation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 1.5
				}
			}
			if = {
				limit = {
					has_idea = civilian_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 1
				}
			}
			if = {
				limit = {
					has_idea = civilian_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 1
				}
			}
			if = {
				limit = {
					OR = {
						has_idea = low_economic_mobilisation
						has_idea = new_economic_policy
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 0.85
				}
			}
			if = {
				limit = {
					OR = { 
						has_idea = partial_economic_mobilisation
						has_idea = new_economic_policy_2
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 0.7
				}
			}
			if = {
				limit = {
					has_idea = low_economic_mobilisation
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 0.55
				}
			}
			if = {
				limit = {
					has_idea = war_economy
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 0.4
				}
			}
			if = {
				limit = {
					OR = { 
						has_idea = tot_economic_mobilisation
						has_idea = SPR_collectivized_society
					}
				}
				multiply_variable = {
					var = THIS.db_spending_cost_artillery
					value = 0.3
				}
			} 
		}
	}
}
every_country = {
	set_variable = {
		var = THIS.db_spending_artillery_produced_today
		var = THIS.total_equipment_produced_artillery
	}
	subtract_from_variable = {
		var = THIS.db_spending_artillery_produced_today
		value = THIS.db_spending_artillery_produced_yesterday
	}
	set_variable = {
		var = THIS.db_spending_artillery_produced_today
		value = THIS.db_spending_artillery_produced_yesterday
	}
	set_variable = {
		var = THIS.db_spending_artillery_today
		value = THIS.db_spending_artillery_produced_yesterday
	}
	multiply_variable = { #multiply artillery cost by units produced
		var = THIS.db_spending_artillery_today
		value = THIS.db_spending_cost_modifier
	}
	add_to_variable = {
		var = THIS.db_spending_artillery_today
		value = THIS.db_spending_artillery_total
	}
}

#SUPPORT EQUIPMENT
every_country = { #170 to equip a soldier minus 83 base infantry equip cost
	set_variable = { #cost to equip soldier
		var = THIS.db_spending_support_equipment
		value = 87
	}
}